<h2>Information of Dataset</h2>
<p/>
<%= form_tag({controller: "cdoanalysises", action: "lonlat" }, target: '_blank', method: :get) do %>  
	<table>
	<tr>
		<td colspan=5 >
		</td>
	</tr>
	<tr>
		<td>
		Select Specific Location :
		</td>
		<td>
			<%= text_field_tag :lon, params[:lon], placeholder: "Longitude" rescue nil %>
		</td>
		<td>--</td>
		<td>
			<%= text_field_tag :lat, params[:lat], placeholder: "Latitude" rescue nil %>
		</td>
		<%= hidden_field_tag :file_name, @file_name %>
		<%= hidden_field_tag :var_name, @var_name %>
		<%= hidden_field_tag :var_std_name, @var_std_name %>
		<%= hidden_field_tag :rate, @rate %>
		<%= hidden_field_tag :rate2, @rate2 %>
		<%= hidden_field_tag :unit, @unit %>
		<%= hidden_field_tag :dataset, @dataset %>
		<td>
			<%= submit_tag "Submit", class: "submit" %>
		</td>
	</tr>
</table>
*Remark : Longitude Range:<%= @lon_r %> | Latitude Range:<%= @lat_r %>
<% end %>

<p/>

<table>
	<tr>
		<td>
			Daily Min & Mean & Max Value of dataset 
		</td>
		<td>
			<div class="buttons">
				<input type="button" class="data" value="Show Detail"/>
			</div>
		</td>
		<td>
			<a href="#" class="export">Export CSV</a>
		</td>
	</tr>
</table>

<div class="content_data" style="display:none" >
	<hr>
	<div id="dvData">
		<table>
			<tr>
				<td><%= @info[0].split(" ")[2] %></td>
				<td><%= @info[0].split(" ")[8] %><br/>Unit:<%= @unit %></td>
				<td><%= @info[0].split(" ")[9] %><br/>Unit:<%= @unit %></td>
				<td><%= @info[0].split(" ")[10] %><br/>Unit:<%= @unit %></td>
			</tr>
			<% @info[1..-1].each do |info| %>
				<tr>
				<td><%= info.split(" ")[2] %></td>
				<td><%= (info.split(" ")[8].to_f * @rate).to_f.round(1) %></td>
				<td><%= (info.split(" ")[9].to_f * @rate).to_f.round(1) %></td>
				<td><%= (info.split(" ")[10].to_f * @rate).to_f.round(1) %></td>
			</tr>
		<% end %>
		</table>

	</div>
</div>

<br/>


<script>

$(document).ready(function () {

		function exportTableToCSV($table, filename) {

		var $rows = $table.find('tr:has(td)'),

		// Temporary delimiter characters unlikely to be typed by keyboard
		// This is to avoid accidentally splitting the actual contents
		tmpColDelim = String.fromCharCode(11), // vertical tab character
		tmpRowDelim = String.fromCharCode(0), // null character

		// actual delimiter characters for CSV format
		colDelim = '","',
		rowDelim = '"\r\n"',

		// Grab text from table into CSV formatted string
		csv = '"' + $rows.map(function (i, row) {
			var $row = $(row),
			$cols = $row.find('td');

			return $cols.map(function (j, col) {
				var $col = $(col),
				text = $col.text();

				return text.replace(/"/g, '""'); // escape double quotes

				}).get().join(tmpColDelim);

			}).get().join(tmpRowDelim)
.split(tmpRowDelim).join(rowDelim)
	.split(tmpColDelim).join(colDelim) + '"',

	// Data URI
	csvData = 'data:application/csv;charset=utf-8,' + encodeURIComponent(csv);

$(this)
	.attr({
			'download': filename,
			'href': csvData,
			'target': '_blank'
			});
		}

		// This must be a hyperlink
		$(".export").on('click', function (event) {
				// CSV
				exportTableToCSV.apply(this, [$('#dvData>table'), 'data.csv' ]);

				// IF CSV, don't do event.preventDefault() or return false
				// We actually need this to be a typical hyperlink
				});
});

</script>

